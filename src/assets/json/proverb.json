[
    {
        "text": "오늘날의 프로그래밍은 크고 아름다운 멍청이가 써도 고장나지 않는 프로그램을 구축하려 애쓰는 소프트웨어 공학자와 그걸 망칠 수 있을 정도로 더 큰 멍청이를 만들려는 우주의 경쟁이다. 지금까지는 우주가 이기고 있다",
        "writer": "릭 쿡(Rick Cook)"
    },
    {
        "text": "리스프는 언어가 아닌, 건축 자재이다",
        "writer": "앨런 케이(Alan Kay)"
    },
    {
        "text": "물 위를 걷는 것과 명세서로 소프트웨어를 개발하는 것은 쉽다. 둘 다 동결되었다면…",
        "writer": "에드워드 V 베라드(Edward V Berard)"
    },
    {
        "text": "그들은 이제버니같은 버그는 만들지 않는다",
        "writer": " Olav Mjelde."
    },
    {
        "text": "프로그래밍 언어로 작성한 프로그램이 프로그램의 목적과 상관 없는 것에 주의해야 한다면 그 언어는 저급언어이다.",
        "writer": "앨런 펄리스(Alan J. Perlis)"
    },
    {
        "text": "C 프로그램은 막 왁스칠 한 마루에서 면도날을 가진 사람이 빠른 춤을 추는 것과 같다.",
        "writer": " Waldi Ravens(NetBSD에서 활동하는 분인듯)"
    },
    {
        "text": "난 언제나 내 컴퓨터가 전화 만큼 사용하기 편했으면 좋겠고 생각했다. 이제 도무지 전화를 어떻게 사용해야 할지 알 수 없게 됐으니 내 소원은 이루어졌다",
        "writer": "감히 입에 담을 수 없는 그분(Bjarne Stroustrup)"
    },
    {
        "text": "붓과 물감을 공부한다고 해서 누구나 전문 화가가 될 수 있는것이 아니듯, 컴퓨터 과학 교육이 아무나 전문 프로그래머로 만들지 못한다",
        "writer": "에릭 S 레이먼드(Eric S. Raymond)"
    },
    {
        "text": "올바로 동작하지 않더라도 걱정말아라. 모든 것이 그랬다면, 넌 직업을 잃었을테니까",
        "writer": " 소프트웨어 공학에서의 모셔의 법칙(Mosher’s Law)"
    },
    {
        "text": "난 마이크로소프트가 유닉스 디랙터리 목록에서 보이지 않게 하려고 .Net이라고 이름을 지었다고 생각한다",
        "writer": " Oktal"
    },
    {
        "text": "그래, 자바가 프로그래밍 언어가 따라야 할 전형일수는 있다. 하지만, 자바 애플리케이션은 애플리케이션이라면반드시 피해야 할전형이다",
        "writer": " pixadel"
    },
    {
        "text": "우리 컴퓨터 프로그램의 안타까운 현 상태를 논한다면, 소프트웨어 개발은 여전히 흑마술이 분명하며, 아직 공학이라고 부를 수 없다",
        "writer": "빌 클린턴(Bill Clinton)"
    },
    {
        "text": "코볼을 쓰는 건 정신을 망친다. 따라서, 코볼을 가르치는 것은 범죄로 간주해야 한다",
        "writer": "E.W. 데이크스트라(E.W. Dijkstra)"
    },
    {
        "text": "유일한 진실을 말하자면, 객체 지향 판 ‘스파게티 코드’는, 당연히, ‘라쟈냐 코드’이다.",
        "writer": " 로버트 월트만(Roberto Waltman)"
    },
    {
        "text": "포트란은 꽃이 아니라 잡초다. 억세고, 이따금 개화하며, 모든 컴퓨터에서 자란다",
        "writer": "앨런 펄리스(Alan J. Perlis)"
    },
    {
        "text": "오랜 시간 나는 그토록 비싸고, 그토록 첨단인 무엇이 그토록 쓸모 없을 수 있는지 이해하지 못했다. 그러다가 컴퓨터는 놀랍도록 똑똑한 것을 할 수 있는 멍청한 기계이고, 컴퓨터 프로그래머는 놀랍도록 멍청한 짓을 할 수 있는 똑똑한 사람이라는 생각이 들었다. 즉, 둘은 완벽한 한 쌍이다",
        "writer": "빌 브라이슨(Bill Bryson)"
    },
    {
        "text": "자기중심적 내 의견이지만, 대부분 사람들이 작성한 C 프로그램은 6 피트 정도 밑으로 들여쓰기 한 후에 흙으로 덮어야 한다.”(주. 서양에서 무덤을 파는 깊이가 6피트이",
        "writer": " 블레어 P. 호턴(Blair P. Houghton)"
    },
    {
        "text": "누군가가 '원하는 것을 얘기 하기만 하면 이루어지는 프로그래밍 언어를 원한다'고 말하면 그에게 막대 사탕을 주도록 하라",
        "writer": "앨런 펄리스(Alan J. Perlis)"
    },
    {
        "text": "언어의 진화: 포트란은 타입이 없는 언어, C는 약한 타입 언어, 에이다는 강한 타입 언어, C++는 강한 허풍 언어",
        "writer": " 론 세슬리(Ron Sercely)"
    },
    {
        "text": "좋은 디자인은 그 때문에 소모되는 비용보다 빠르게 가치가 쌓인다",
        "writer": "토마스 C. 게일(Thomas C. Gale)"
    },
    {
        "text": "파이썬이 베이식과 동급이라면 옵티머스 프라임은 트럭이다",
        "writer": " 코리 도트(Cory Dodt)"
    },
    {
        "text": "말은 쉽지, 코드를 보여줘",
        "writer": "리누스 토르발스(Linus Torvalds)"
    },
    {
        "text": "완벽함은 아무것도 더할 것이 없을 때가 아닌, 아무것도 제거할 것이 남지 않았을 때 달성된다",
        "writer": "앙투안 드 생텍쥐페리(Antoine de Saint-Exupéry)"
    },
    {
        "text": "C는 유별나고, 결함 있고, 터무니없게 성공했다",
        "writer": "데니서 리치(Dennis M. Ritchie)"
    },
    {
        "text": "이론상, 이론과 실제는 같다. 실제로는, 그렇지 않다",
        "writer": "요기 베라(Yoggi Berra)"
    },
    {
        "text": "튀어난 팀 없이 튀어난 소프트웨어는 얻을 수 없다. 그리고 대부분의 소프트웨어 팀은 기능장애의 한 종류처럼 행동한다",
        "writer": " Jim McCarthy"
    },
    {
        "text": "PHP는 사소한 해악이며 서투른 아마추어가 저지르고 만들었지만, 펄은 엄청나고 교활한 해악이며 능숙하지만 변태인 전문가가 저질렀다",
        "writer": " Jon Ribbens"
    },
    {
        "text": "프로그래밍은 자기 얼굴을 차는 것과 같아서, 조만간 코피가 날 것이다",
        "writer": " 카일 우드버리(Kyle Woodbury)"
    },
    {
        "text": "펄 - RSA로 암호화하기 전과 후가 동일한 유일한 언어",
        "writer": "키스 보스틱(Keith Bostic)"
    },
    {
        "text": "쉘을 이식하는 것이 쉘 스크립트를 이식하기 보다 쉽다",
        "writer": "래리 월(Larry Wall)"
    },
    {
        "text": "내가 ‘객체 지향’이란 용어를 고안했으니 말인데, C++는 거기에 포함하지 않았다고 말할 수 있다",
        "writer": "앨런 케이(Alan Kay)"
    },
    {
        "text": "프로그래밍을 배우는 것과 인터렉티브 소프트웨어 설계는 타자를 배우는 것과 시를 쓰는 것의 관계 보다 더 상관 없는 일이다.",
        "writer": "테드 넬슨(Ted Nelson)"
    },
    {
        "text": "최고의 프로그래머란 좀 더 나은 사람을 넘어 엄청나게 나은 사람이다. 그들은 개념 창의성, 속도, 설계의 독창성, 문제 해결 능력 중 어떤 기준으로 측정하든 10배나 뛰어나다.",
        "writer": " 랜달 E 스트로스(Randall E. Stross)"
    },
    {
        "text": "맥도날드가 소프트웨어 회사처럼 경영되었다면, 빅맥 100개 중 하나 꼴로 식중독이 걸리고도 “미안합니다. 두 개 증정 쿠폰을 받으세요”라는 대답을 들게 될 것이",
        "writer": " 마크 미나시(Mark Minasi)"
    },
    {
        "text": "위 코드에서 버그를 조심하라. 동작한다고 증명은 했는데 실행해 보지는 않았다",
        "writer": "도날드 E 크누스(Donald E. Knuth)"
    },
    {
        "text": "컴퓨터 시스템 분석은 아이 양육과 같다. 견딜 수 없는 피해를 줄 순 있어도 성공을 보장할 순 없다",
        "writer": "톰 드마르코(Tom DeMarco)"
    },
    {
        "text": "난 이게 당신 기계에서 동작할지 관심 없소. 우리가 당신 기계까지 팔진 않았소",
        "writer": " Vidiu Platon"
    },
    {
        "text": "월요일에 작성한 코드를 디버깅하느라 그 주의 나머지를 허비하느니 월요일에 침대 안에 머무는게 나을 때도 있다",
        "writer": " 크리스토퍼 톰프슨(Christopher Thompson)"
    },
    {
        "text": "코드 줄 수로 프로그래밍 진척을 측정하는 것은 무게로 비행기 제작 진척도를 측정하는 것과 같다",
        "writer": "빌 게이츠(Bill Gates)"
    },
    {
        "text": "애초에 디버깅은 코드를 작성하는 것 보다 배나 힘들다. 그러니, 코드를 최대한 꼼꼼하게 작성하는 사람은, 당연히, 디버그할 정도로 똑똑하지 않은 것이다",
        "writer": "브라이언 커니핸(Brian W. Kernighan)"
    },
    {
        "text": "사람들은 컴퓨터 과학이 천재들의 기예이라고 생각하지만 사실 현실은 반대로, 단지 많은 사람이, 작은 돌로 된 담처럼, 다른 사람의 작업 위에 쌓아 올릴 뿐이다",
        "writer": "도날드 E 크누스(Donald E. Knuth)"
    },
    {
        "text": "먼저 컴퓨터 과학과 모든 이론을 배워라. 다음엔 (주. 당신만의) 프로그래밍 방식을 개발하라. 그러고 나선 모두 잊고 그냥 해킹하라.”(주. 여기서 해킹은 그냥 다른 라이브러리나 프로그램을 되는대로 가져다가 알아서 재단해 쓰라는 의미에 가깝습니다",
        "writer": " 조지 커렛(George Carrette)"
    },
    {
        "text": "당신 대부분은 프로그래머의 미덕과 친숙하다. 미덕은 세 가지인데, 당연히, 게으름, 성급함, 오만이다",
        "writer": "래리 월(Larry Wall)"
    },
    {
        "text": "오늘날 소프트웨어 대부분은 이집트 피라미드와 매우 비슷한데, 수많은 블럭을 차곡차곡 쌓은 이것은, 구조적 무결성은 없고, 그저 마구잡이로 노예 수천을 동원해 완성됐다",
        "writer": "앨런 케이(Alan Kay)"
    },
    {
        "text": "프로그래머가 격는 어려움은 프로그래머가 무엇을 하는지 너무 늦기 전에 말할 수 없다는 점이다",
        "writer": "시모어 크레이(Seymour Cray)"
    },
    {
        "text": "반복하는 인간, 재귀하는 ",
        "writer": "L. 피터 도이치(L. Peter Deutsch)"
    },
    {
        "text": "[의회 의원에게] 두 번 이런 질문을 받았다. ‘배비지 선생님, 그 기계에 잘못된 수를 집어 넣어도 올바른 답이 나오는지 말씀해 주시겠습니까?’ 나는 어떤 유형의 개념적 혼란이 이런 질문을 유발하는지 바로 이해할 수 없다",
        "writer": "찰스 배비지(Charles Babbage)"
    },
    {
        "text": "좋은 프로그래머 대부분은 돈이나 대중에게 받을 찬사를 기대하고 프로그래밍을 하지 않고 프로그래밍이 재미 있어서 한다",
        "writer": "리누스 토르발스(Linus Torvalds)"
    },
    {
        "text": "결국 당신 코드를 유지보수하게 될 친구가 당신이 어디에 사는지 아는 광폭한 싸이코패스가 될 것이라고 여기고 코드를 작성하라",
        "writer": " 마틴 골딩(Martin Golding)"
    },
    {
        "text": "소프트웨어 설계를 구성하는 데에는 두 가지 방법이 있다. 한가지 방법은 아주 단순하게 만들어서 명백히 결함이 없는 것이다. 그리고 다른 방법은 명백한 결함이 없을 정도로 아주 복잡하게 만드는 것이다",
        "writer": "찰스 앤터니 리처드 호어(C.A.R. Hoare)"
    }
]